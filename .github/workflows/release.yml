name: Release Windows EXE

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag to release (e.g. v1.1)"
        required: true
        type: string

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    env:
      # If this run came from a tag, use it; otherwise use the manual input
      TAG_NAME: ${{ github.ref_type == 'tag' && github.ref_name || inputs.tag_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow requests

      - name: Build EXE (embed icon)
        shell: pwsh
        run: |
          pyinstaller --noconfirm --onefile --windowed `
            --name "YIFY-Subtitle-Downloader" `
            --icon "icon.ico" `
            --hidden-import PIL `
            --hidden-import PIL.Image `
            --hidden-import PIL.ImageDraw `
            YIFY-Subtitle-Downloader.py

      - name: Ensure TAG_NAME is set
        if: env.TAG_NAME == ''
        shell: pwsh
        run: |
          Write-Error "This workflow needs a tag. Push a tag like v1.1 or provide 'tag_name' when running manually."
          exit 1

      - name: Rename artifact with tag
        shell: pwsh
        run: |
          $exe = "dist\YIFY-Subtitle-Downloader.exe"
          if (!(Test-Path $exe)) { Write-Error "Build failed: $exe not found" }
          Move-Item $exe ("dist\YIFY-Subtitle-Downloader-$env:TAG_NAME.exe") -Force

      - name: Release (attach to the real tag)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.TAG_NAME }}
          generate_release_notes: true
          files: |
            dist/YIFY-Subtitle-Downloader-${{ env.TAG_NAME }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
